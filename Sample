https://drive.google.com/file/d/1dNCy881F6UluS_3P2ro87Zl97HV7sWK3/view

package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.AnalogInput;
import com.qualcomm.robotcore.hardware.Gyroscope;
import com.qualcomm.robotcore.hardware.ColorSensor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.DigitalChannel;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.util.ElapsedTime;

@Autonomous
public class distanceDemo extends LinearOpMode()
{
  private DistanceSensor front;
  public void runOpMode()
  {
    front = hardwareMap.get(DistanceSensor.class, "distance");
    private ElapsedTime time = new ElapsedTime();
    
    waitForStart();
    time.reset();
    while (opModeIsActive() && time.seconds()<3 && front.getDistance(DistanceUnit.CM)>10)
    {
      telemetry.addData("Status", "Running");
    } 
  }  
}
